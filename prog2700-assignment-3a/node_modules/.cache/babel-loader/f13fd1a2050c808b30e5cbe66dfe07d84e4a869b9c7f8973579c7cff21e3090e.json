{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roger\\\\Desktop\\\\Winter 2024 Courses\\\\PROG2700\\\\Assignments\\\\Assignment 3\\\\PROG2700-Assignment-3A\\\\prog2700-assignment-3a\\\\src\\\\components\\\\MoveCounter.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MoveCounter({\n  history,\n  currentMove\n}) {\n  // Initialize move counts for each player\n  let xMoves = 0;\n  let oMoves = 0;\n\n  // Iterate through the history up to the current move index\n  for (let i = 0; i <= currentMove; i++) {\n    // Get the squares for the current move\n\n    const squares = history[i];\n\n    // Check if it's the expected player's turn\n    const currentPlayer = i % 2 === 0 ? 'X' : 'O';\n\n    // Iterate through the squares in the current move\n    for (let square of squares) {\n      console.log(\"square=\" + square);\n      if (currentPlayer === 'X' && square === 'X') {\n        console.log(\"Increment X\");\n        xMoves++;\n      } else if (currentPlayer === 'O' && square === 'O') {\n        oMoves++;\n      }\n    }\n  }\n\n  // Render the move counts for both players\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"move-counter\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Moves made by X: \", xMoves]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Moves made by O: \", oMoves]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_c = MoveCounter;\nvar _c;\n$RefreshReg$(_c, \"MoveCounter\");","map":{"version":3,"names":["MoveCounter","history","currentMove","xMoves","oMoves","i","squares","currentPlayer","square","console","log","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/roger/Desktop/Winter 2024 Courses/PROG2700/Assignments/Assignment 3/PROG2700-Assignment-3A/prog2700-assignment-3a/src/components/MoveCounter.js"],"sourcesContent":["export default function MoveCounter({ history, currentMove }) {\r\n    // Initialize move counts for each player\r\n    let xMoves = 0;\r\n    let oMoves = 0;\r\n\r\n    // Iterate through the history up to the current move index\r\n    for (let i = 0; i <= currentMove; i++) {\r\n        // Get the squares for the current move\r\n \r\n        const squares = history[i];\r\n\r\n        // Check if it's the expected player's turn\r\n        const currentPlayer = i % 2 === 0 ? 'X' : 'O';\r\n\r\n        // Iterate through the squares in the current move\r\n        for (let square of squares) {\r\n            console.log(\"square=\" + square);\r\n            if (currentPlayer === 'X' && square === 'X') {\r\n                console.log(\"Increment X\")\r\n                xMoves++;\r\n            } else if (currentPlayer === 'O' && square === 'O') {\r\n                oMoves++;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Render the move counts for both players\r\n    return (\r\n        <div className=\"move-counter\">\r\n            <p>Moves made by X: {xMoves}</p>\r\n            <p>Moves made by O: {oMoves}</p>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,eAAe,SAASA,WAAWA,CAAC;EAAEC,OAAO;EAAEC;AAAY,CAAC,EAAE;EAC1D;EACA,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,MAAM,GAAG,CAAC;;EAEd;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIH,WAAW,EAAEG,CAAC,EAAE,EAAE;IACnC;;IAEA,MAAMC,OAAO,GAAGL,OAAO,CAACI,CAAC,CAAC;;IAE1B;IACA,MAAME,aAAa,GAAGF,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG;;IAE7C;IACA,KAAK,IAAIG,MAAM,IAAIF,OAAO,EAAE;MACxBG,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGF,MAAM,CAAC;MAC/B,IAAID,aAAa,KAAK,GAAG,IAAIC,MAAM,KAAK,GAAG,EAAE;QACzCC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1BP,MAAM,EAAE;MACZ,CAAC,MAAM,IAAII,aAAa,KAAK,GAAG,IAAIC,MAAM,KAAK,GAAG,EAAE;QAChDJ,MAAM,EAAE;MACZ;IACJ;EACJ;;EAEA;EACA,oBACIO,OAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBF,OAAA;MAAAE,QAAA,GAAG,mBAAiB,EAACV,MAAM;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCN,OAAA;MAAAE,QAAA,GAAG,mBAAiB,EAACT,MAAM;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEd;AAACC,EAAA,GAjCuBlB,WAAW;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}