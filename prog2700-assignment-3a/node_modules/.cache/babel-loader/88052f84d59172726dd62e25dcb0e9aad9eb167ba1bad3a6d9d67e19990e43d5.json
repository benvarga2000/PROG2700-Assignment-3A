{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roger\\\\Desktop\\\\Winter 2024 Courses\\\\PROG2700\\\\Assignments\\\\Assignment 3\\\\PROG2700-Assignment-3A\\\\prog2700-assignment-3a\\\\src\\\\components\\\\MoveCounter.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MoveCounter({\n  history,\n  currentMove\n}) {\n  // Initialize move counts for each player\n  let xMoves = 0;\n  let oMoves = 0;\n  console.log(\"currentMove=\" + currentMove);\n  xMoves = currentMove / 2;\n  oMoves = xMoves;\n  if (!(xMoves % 2)) {\n    console.log(\"xMoves=\" + xMoves);\n    xMoves = Math.trunc(xMoves++); // if currentMove === odd then X should be one more than o\n    oMoves = Math.trunc(oMoves);\n  }\n  /*\r\n      // Iterate through the history up to the current move index\r\n      for (let i = 0; i <= currentMove; i++) {\r\n          // Get the squares for the current move\r\n   \r\n          const squares = history[i];\r\n  \r\n          // Check if it's the expected player's turn\r\n          const currentPlayer = i % 2 === 0 ? 'X' : 'O';\r\n  \r\n          // Iterate through the squares in the current move\r\n          for (let square of squares) {\r\n              console.log(\"square=\" + square);\r\n              if (currentPlayer === 'X' && square === 'X') {\r\n                  xMoves++;\r\n                  console.log(\"Increment X=\" + xMoves);\r\n              } else if (currentPlayer === 'O' && square === 'O') {\r\n                  oMoves++;\r\n                  console.log(\"Increment O=\" + oMoves);\r\n              }\r\n          }\r\n      }\r\n  */\n  // Render the move counts for both players\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"move-counter\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Moves made by X: \", xMoves]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Moves made by O: \", oMoves]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_c = MoveCounter;\nvar _c;\n$RefreshReg$(_c, \"MoveCounter\");","map":{"version":3,"names":["MoveCounter","history","currentMove","xMoves","oMoves","console","log","Math","trunc","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/roger/Desktop/Winter 2024 Courses/PROG2700/Assignments/Assignment 3/PROG2700-Assignment-3A/prog2700-assignment-3a/src/components/MoveCounter.js"],"sourcesContent":["\r\nexport default function MoveCounter({ history, currentMove }) {\r\n    // Initialize move counts for each player\r\n    let xMoves = 0;\r\n    let oMoves = 0;\r\n\r\n    console.log(\"currentMove=\" + currentMove);\r\n\r\n    xMoves = currentMove / 2;\r\n    oMoves = xMoves;\r\n    if (!(xMoves % 2)) {\r\n        console.log(\"xMoves=\" + xMoves);\r\n        xMoves = Math.trunc(xMoves++);  // if currentMove === odd then X should be one more than o\r\n        oMoves = Math.trunc(oMoves);\r\n    }\r\n/*\r\n    // Iterate through the history up to the current move index\r\n    for (let i = 0; i <= currentMove; i++) {\r\n        // Get the squares for the current move\r\n \r\n        const squares = history[i];\r\n\r\n        // Check if it's the expected player's turn\r\n        const currentPlayer = i % 2 === 0 ? 'X' : 'O';\r\n\r\n        // Iterate through the squares in the current move\r\n        for (let square of squares) {\r\n            console.log(\"square=\" + square);\r\n            if (currentPlayer === 'X' && square === 'X') {\r\n                xMoves++;\r\n                console.log(\"Increment X=\" + xMoves);\r\n            } else if (currentPlayer === 'O' && square === 'O') {\r\n                oMoves++;\r\n                console.log(\"Increment O=\" + oMoves);\r\n            }\r\n        }\r\n    }\r\n*/\r\n    // Render the move counts for both players\r\n    return (\r\n        <div className=\"move-counter\">\r\n            <p>Moves made by X: {xMoves}</p>\r\n            <p>Moves made by O: {oMoves}</p>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AACA,eAAe,SAASA,WAAWA,CAAC;EAAEC,OAAO;EAAEC;AAAY,CAAC,EAAE;EAC1D;EACA,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,MAAM,GAAG,CAAC;EAEdC,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGJ,WAAW,CAAC;EAEzCC,MAAM,GAAGD,WAAW,GAAG,CAAC;EACxBE,MAAM,GAAGD,MAAM;EACf,IAAI,EAAEA,MAAM,GAAG,CAAC,CAAC,EAAE;IACfE,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGH,MAAM,CAAC;IAC/BA,MAAM,GAAGI,IAAI,CAACC,KAAK,CAACL,MAAM,EAAE,CAAC,CAAC,CAAE;IAChCC,MAAM,GAAGG,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC;EAC/B;EACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA,oBACIK,OAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBF,OAAA;MAAAE,QAAA,GAAG,mBAAiB,EAACR,MAAM;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCN,OAAA;MAAAE,QAAA,GAAG,mBAAiB,EAACP,MAAM;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEd;AAACC,EAAA,GA5CuBhB,WAAW;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}