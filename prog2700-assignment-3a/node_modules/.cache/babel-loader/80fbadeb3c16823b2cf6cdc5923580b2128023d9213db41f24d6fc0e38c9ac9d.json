{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roger\\\\Desktop\\\\Winter 2024 Courses\\\\PROG2700\\\\Assignments\\\\Assignment 3\\\\PROG2700-Assignment-3A\\\\prog2700-assignment-3a\\\\src\\\\components\\\\Board.js\";\nimport React from 'react';\nimport Square from './Square1';\nimport { calculateWinner, isDraw } from './gameUtils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  // Calculate the winner and the winning line\n  const {\n    winner,\n    winningLine\n  } = calculateWinner(squares);\n\n  // Determine the game status\n  const draw = isDraw(squares);\n  let status;\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else if (draw) {\n    status = 'Game Result: Draw';\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n\n  // Helper function to check if a square is part of the winning line\n  function isWinningSquare(index) {\n    return winningLine && winningLine.includes(index);\n  }\n\n  // Handle a click on a square\n  function handleClick(i) {\n    if (winner || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares);\n  }\n\n  // Render the board with the winning squares highlighted\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0],\n        onSquareClick: () => handleClick(0),\n        isWinning: isWinningSquare(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1],\n        onSquareClick: () => handleClick(1),\n        isWinning: isWinningSquare(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2],\n        onSquareClick: () => handleClick(2),\n        isWinning: isWinningSquare(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[3],\n        onSquareClick: () => handleClick(3),\n        isWinning: isWinningSquare(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[4],\n        onSquareClick: () => handleClick(4),\n        isWinning: isWinningSquare(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[5],\n        onSquareClick: () => handleClick(5),\n        isWinning: isWinningSquare(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[6],\n        onSquareClick: () => handleClick(6),\n        isWinning: isWinningSquare(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[7],\n        onSquareClick: () => handleClick(7),\n        isWinning: isWinningSquare(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[8],\n        onSquareClick: () => handleClick(8),\n        isWinning: isWinningSquare(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","Square","calculateWinner","isDraw","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","xIsNext","squares","onPlay","winner","winningLine","draw","status","isWinningSquare","index","includes","handleClick","i","nextSquares","slice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","value","onSquareClick","isWinning","_c","$RefreshReg$"],"sources":["C:/Users/roger/Desktop/Winter 2024 Courses/PROG2700/Assignments/Assignment 3/PROG2700-Assignment-3A/prog2700-assignment-3a/src/components/Board.js"],"sourcesContent":["import React from 'react';\r\nimport Square from './Square1';\r\nimport { calculateWinner, isDraw } from './gameUtils';\r\n\r\nfunction Board({ xIsNext, squares, onPlay }) {\r\n    // Calculate the winner and the winning line\r\n    const { winner, winningLine } = calculateWinner(squares);\r\n\r\n    // Determine the game status\r\n    const draw = isDraw(squares);\r\n    let status;\r\n    if (winner) {\r\n        status = 'Winner: ' + winner;\r\n    } else if (draw) {\r\n        status = 'Game Result: Draw';\r\n    } else {\r\n        status = 'Next player: ' + (xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    // Helper function to check if a square is part of the winning line\r\n    function isWinningSquare(index) {\r\n        return winningLine && winningLine.includes(index);\r\n    }\r\n\r\n    // Handle a click on a square\r\n    function handleClick(i) {\r\n        if (winner || squares[i]) {\r\n            return;\r\n        }\r\n        const nextSquares = squares.slice();\r\n        if (xIsNext) {\r\n            nextSquares[i] = 'X';\r\n        } else {\r\n            nextSquares[i] = 'O';\r\n        }\r\n        onPlay(nextSquares);\r\n    }\r\n\r\n    // Render the board with the winning squares highlighted\r\n    return (\r\n        <>\r\n            <div className=\"status\">{status}</div>\r\n            <div className=\"board-row\">\r\n                <Square\r\n                    value={squares[0]}\r\n                    onSquareClick={() => handleClick(0)}\r\n                    isWinning={isWinningSquare(0)}\r\n                />\r\n                <Square\r\n                    value={squares[1]}\r\n                    onSquareClick={() => handleClick(1)}\r\n                    isWinning={isWinningSquare(1)}\r\n                />\r\n                <Square\r\n                    value={squares[2]}\r\n                    onSquareClick={() => handleClick(2)}\r\n                    isWinning={isWinningSquare(2)}\r\n                />\r\n            </div>\r\n            <div className=\"board-row\">\r\n                <Square\r\n                    value={squares[3]}\r\n                    onSquareClick={() => handleClick(3)}\r\n                    isWinning={isWinningSquare(3)}\r\n                />\r\n                <Square\r\n                    value={squares[4]}\r\n                    onSquareClick={() => handleClick(4)}\r\n                    isWinning={isWinningSquare(4)}\r\n                />\r\n                <Square\r\n                    value={squares[5]}\r\n                    onSquareClick={() => handleClick(5)}\r\n                    isWinning={isWinningSquare(5)}\r\n                />\r\n            </div>\r\n            <div className=\"board-row\">\r\n                <Square\r\n                    value={squares[6]}\r\n                    onSquareClick={() => handleClick(6)}\r\n                    isWinning={isWinningSquare(6)}\r\n                />\r\n                <Square\r\n                    value={squares[7]}\r\n                    onSquareClick={() => handleClick(7)}\r\n                    isWinning={isWinningSquare(7)}\r\n                />\r\n                <Square\r\n                    value={squares[8]}\r\n                    onSquareClick={() => handleClick(8)}\r\n                    isWinning={isWinningSquare(8)}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Board;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}